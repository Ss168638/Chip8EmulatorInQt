#ifndef CHIP8_H
#define CHIP8_H

#include <fstream>
#include <time.h>

#define TERMINAL_DEBUG_ENABLED false
#define MAX_ROM_SIZE (4096-512)

using namespace std;

class chip8
{
public:
    uint8_t rom[1024*4];
    uint8_t gfx[64*32];
    uint8_t V[16];
    uint16_t I;
    uint16_t PC;
    uint16_t stack[16];
    uint16_t SP;
    uint8_t soundTimer;
    uint8_t delayTimer;
    uint8_t key[16];
    bool drawFlag;
    unsigned char chip8_fontset[80] =
    {
     0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
     0x20, 0x60, 0x20, 0x20, 0x70, // 1
     0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
     0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
     0x90, 0x90, 0xF0, 0x10, 0x10, // 4
     0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
     0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
     0xF0, 0x10, 0x20, 0x40, 0x40, // 7
     0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
     0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
     0xF0, 0x90, 0xF0, 0x90, 0x90, // A
     0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
     0xF0, 0x80, 0x80, 0x80, 0xF0, // C
     0xE0, 0x90, 0x90, 0x90, 0xE0, // D
     0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
     0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };

public:
    chip8();
    void initialize();
    void loadProgram(string path);
    void execute();
#ifdef TERMINAL_DEBUG_ENABLED
    void drawGraphics();
#endif

private:
    void clearScreen();
};

#endif // CHIP8_H
